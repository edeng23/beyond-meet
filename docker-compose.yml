version: '3.8'
services:
  db:
    image: postgres:latest
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U beyondmeet" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: beyondmeet
      POSTGRES_USER: beyondmeet
      POSTGRES_PASSWORD: beyondmeet
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - beyondmeet-network

  redis:
    image: redis:latest
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - beyondmeet-network

  python_backend:
    build: ./backend
    container_name: python_backend
    environment:
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - DATABASE_URL=postgresql://beyondmeet:beyondmeet@db:5432/beyondmeet
    env_file:
      - ./.env
    volumes:
      - ./backend:/usr/src/app
      - ./backend/credentials.json:/usr/src/app/credentials.json
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - beyondmeet-network
    hostname: backend
    deploy:
      resources:
        limits:
          memory: 2G

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    env_file:
      - ./frontend/.env.local
      - ./.env
    depends_on:
      - python_backend
    networks:
      - beyondmeet-network
    deploy:
      resources:
        limits:
          memory: 2G

networks:
  beyondmeet-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
